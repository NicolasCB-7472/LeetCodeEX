---
class Solution {
    public void duplicateZeros(int[] arr) {
        int l=arr.length;
        ArrayList<Integer> ar=new ArrayList<>();
        for(int i:arr){
            if(i==0) ar.add(0);
            ar.add(i);
        }
        for(int i=0;i<l;i++){
            arr[i]=ar.get(i);
        }
    }
}
---
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        // int j=0;
        // for(int i=m;i<nums1.length;i++)
        //     nums1[i]=nums2[j++];
        // Arrays.sort(nums1);

        int p1=m-1 , p2=n-1 , i=m+n-1;
        while(p1>=0 && p2>=0)
            if(nums1[p1] > nums2[p2]){
                nums1[i--]=nums1[p1--];
            } else {
                nums1[i--]=nums2[p2--];
            }
        while(p2>=0){
            nums1[i--]=nums2[p2--];
        }
    }
}

